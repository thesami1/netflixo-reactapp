{"ast":null,"code":"import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport * as User from \"./Reducers/userReducers\";\nimport * as categories from \"./Reducers/CategoriesReducer\";\n// import * as movies from \"./Reducers/Moviesreducer\";\n\nconst rootReducer = combineReducers({\n  // user reducers\n  userLogin: User.userLoginReducer,\n  userRegister: User.userRegisterReducer,\n  userUpdateProfile: User.userUpdateProfileReducer,\n  userDeleteProfile: User.userDeleteProfileReducer,\n  userchangepassword: User.userChangePasswordReducer,\n  userGetFavoriteMovies: User.userGetFavoriteMoviesReducer,\n  userDeleteFavoriteMovies: User.userDeleteFavoriteMoviesReducer,\n  adminGetAllUsers: User.adminGetAllUsersReducer,\n  adminDeleteUser: User.adminDeleteUserReducer,\n  userLikeMovie: User.userLikeMovieReducer,\n  // Category reducers\n  categoryGetAll: categories.getAllCategoriesReducer,\n  categoryCreate: categories.createCategoryReducer,\n  categoryUpdate: categories.updateCategoryReducer,\n  categoryDelete: categories.deleteCategoryReducer\n\n  // // Movies reducers\n  // getAllMovies: movies.moviesListReducer,\n  // getRandomMovies: movies.moviesRandomReducer,\n  // getMovieById: movies.movieDetailsReducer,\n  // getTopRatedMovie: movies.movieTopRatedReducer,\n  // createReview: movies.createReviewReducer,\n  // deleteMovie: movies.deleteMovieReducer,\n  // deleteAllMovies: movies.deleteAllMoviesReducer,\n  // createMovie: movies.createMovieReducer,\n  // casts: movies.CastsReducer,\n  // updateMovie: movies.updateMovieReducer,\n});\n\n// get userInfo from localStorage\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\n\n// initialState\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nexport const store = configureStore({\n  reducer: rootReducer,\n  preloadedState: initialState\n});","map":{"version":3,"names":["combineReducers","configureStore","User","categories","rootReducer","userLogin","userLoginReducer","userRegister","userRegisterReducer","userUpdateProfile","userUpdateProfileReducer","userDeleteProfile","userDeleteProfileReducer","userchangepassword","userChangePasswordReducer","userGetFavoriteMovies","userGetFavoriteMoviesReducer","userDeleteFavoriteMovies","userDeleteFavoriteMoviesReducer","adminGetAllUsers","adminGetAllUsersReducer","adminDeleteUser","adminDeleteUserReducer","userLikeMovie","userLikeMovieReducer","categoryGetAll","getAllCategoriesReducer","categoryCreate","createCategoryReducer","categoryUpdate","updateCategoryReducer","categoryDelete","deleteCategoryReducer","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","store","reducer","preloadedState"],"sources":["C:/Users/hp/Downloads/practice/client/src/Redux/store.js"],"sourcesContent":["import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport * as User from \"./Reducers/userReducers\";\r\nimport * as categories from \"./Reducers/CategoriesReducer\";\r\n// import * as movies from \"./Reducers/Moviesreducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  // user reducers\r\n  userLogin: User.userLoginReducer,\r\n  userRegister: User.userRegisterReducer,\r\n  userUpdateProfile: User.userUpdateProfileReducer,\r\n  userDeleteProfile: User.userDeleteProfileReducer,\r\n  userchangepassword: User.userChangePasswordReducer,\r\n  userGetFavoriteMovies: User.userGetFavoriteMoviesReducer,\r\n  userDeleteFavoriteMovies: User.userDeleteFavoriteMoviesReducer,\r\n  adminGetAllUsers: User.adminGetAllUsersReducer,\r\n  adminDeleteUser: User.adminDeleteUserReducer,\r\n  userLikeMovie: User.userLikeMovieReducer,\r\n\r\n  // Category reducers\r\n  categoryGetAll: categories.getAllCategoriesReducer,\r\n  categoryCreate: categories.createCategoryReducer,\r\n  categoryUpdate: categories.updateCategoryReducer,\r\n  categoryDelete: categories.deleteCategoryReducer,\r\n\r\n  // // Movies reducers\r\n  // getAllMovies: movies.moviesListReducer,\r\n  // getRandomMovies: movies.moviesRandomReducer,\r\n  // getMovieById: movies.movieDetailsReducer,\r\n  // getTopRatedMovie: movies.movieTopRatedReducer,\r\n  // createReview: movies.createReviewReducer,\r\n  // deleteMovie: movies.deleteMovieReducer,\r\n  // deleteAllMovies: movies.deleteAllMoviesReducer,\r\n  // createMovie: movies.createMovieReducer,\r\n  // casts: movies.CastsReducer,\r\n  // updateMovie: movies.updateMovieReducer,\r\n});\r\n\r\n// get userInfo from localStorage\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\n// initialState\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  preloadedState: initialState,\r\n});\r\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,OAAO,KAAKC,IAAI,MAAM,yBAAyB;AAC/C,OAAO,KAAKC,UAAU,MAAM,8BAA8B;AAC1D;;AAEA,MAAMC,WAAW,GAAGJ,eAAe,CAAC;EAClC;EACAK,SAAS,EAAEH,IAAI,CAACI,gBAAgB;EAChCC,YAAY,EAAEL,IAAI,CAACM,mBAAmB;EACtCC,iBAAiB,EAAEP,IAAI,CAACQ,wBAAwB;EAChDC,iBAAiB,EAAET,IAAI,CAACU,wBAAwB;EAChDC,kBAAkB,EAAEX,IAAI,CAACY,yBAAyB;EAClDC,qBAAqB,EAAEb,IAAI,CAACc,4BAA4B;EACxDC,wBAAwB,EAAEf,IAAI,CAACgB,+BAA+B;EAC9DC,gBAAgB,EAAEjB,IAAI,CAACkB,uBAAuB;EAC9CC,eAAe,EAAEnB,IAAI,CAACoB,sBAAsB;EAC5CC,aAAa,EAAErB,IAAI,CAACsB,oBAAoB;EAExC;EACAC,cAAc,EAAEtB,UAAU,CAACuB,uBAAuB;EAClDC,cAAc,EAAExB,UAAU,CAACyB,qBAAqB;EAChDC,cAAc,EAAE1B,UAAU,CAAC2B,qBAAqB;EAChDC,cAAc,EAAE5B,UAAU,CAAC6B;;EAE3B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC,CAAC;;AAEF;AACA,MAAMC,mBAAmB,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;;AAER;AACA,MAAMG,YAAY,GAAG;EACnBjC,SAAS,EAAE;IAAEkC,QAAQ,EAAEN;EAAoB;AAC7C,CAAC;AAED,OAAO,MAAMO,KAAK,GAAGvC,cAAc,CAAC;EAClCwC,OAAO,EAAErC,WAAW;EACpBsC,cAAc,EAAEJ;AAClB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}