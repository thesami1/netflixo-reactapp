{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\practice\\\\client\\\\src\\\\Components\\\\Modals\\\\CategoryModal.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import MainModal from \"./MainModal\";\n// import { Input } from \"../UsedInputs\";\n\n// function CategoryModal({ modalOpen, setModalOpen, category }) {\n//   return (\n//     <MainModal modalOpen={modalOpen} setModalOpen={setModalOpen}>\n//       <div className=\"inline-block sm:w-4/5 border border-border md:w-3/5 lg:w-2/5 w-full align-middle p-10 overflow-y-auto h-full bg-main text-white rounded-2xl\">\n//         <h2 className=\"text-3xl font-bold\">{category ? \"Update\" : \"Create\"}</h2>\n//         <form className=\"flex flex-col gap-6 text-left mt-6\">\n//           <Input\n//             label=\"Category Name\"\n//             placeholder={category ? category.title : \"Actions\"}\n//             type=\"text\"\n//             bg={false}\n//           />\n//           <button\n//             onClick={() => setModalOpen(false)}\n//             className=\"w-full flex-rows gap-4 py-3 text-lg transitions hover:bg-dry border-2 border-subMain rounded bg-subMain text-white\"\n//           >\n//             {category ? \"Update\" : \"Add\"}\n//           </button>\n//         </form>\n//       </div>\n//     </MainModal>\n//   );\n// }\n\n// export default CategoryModal;\n\nimport React, { useEffect, useState } from \"react\";\nimport MainModal from \"./MainModal\";\nimport { Input } from \"../UsedInputs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createCategoryAction, updateCategoryAction } from \"../../Redux/Actions/CategoriesActions\";\nimport toast from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CategoryModal(_ref) {\n  _s();\n  let {\n    modalOpen,\n    setModalOpen,\n    category\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const dispatch = useDispatch();\n  const {\n    isLoading,\n    isError,\n    isSuccess\n  } = useSelector(state => state.categoryCreate);\n  const {\n    isLoading: upLoading,\n    isError: upError,\n    isSuccess: upSuccess\n  } = useSelector(state => state.categoryUpdate);\n\n  //  category handler\n\n  const submitHandler = e => {\n    e.preventDefault();\n    if (title) {\n      // if category is not empty then update category else create category\n      if (category) {\n        dispatch(updateCategoryAction(category === null || category === void 0 ? void 0 : category._id, {\n          title: title\n        }));\n        setModalOpen(!modalOpen);\n      } else {\n        dispatch(createCategoryAction({\n          title: title\n        }));\n        setTitle(\"\");\n        setModalOpen(!modalOpen);\n      }\n    } else {\n      toast.error(\"Please write a category name\");\n    }\n  };\n\n  // useEffect\n  useEffect(() => {\n    // error\n    if (upError || isError) {\n      toast.error(upError || isError);\n      dispatch({\n        type: isError ? \"CREATE_CATEGORY_RESET\" : \"UPDATE_CATEGORY_RESET\"\n      });\n    }\n\n    // success\n    if (isSuccess || upSuccess) {\n      dispatch({\n        type: isError ? \"CREATE_CATEGORY_RESET\" : \"UPDATE_CATEGORY_RESET\"\n      });\n    }\n\n    // if category is not null then set title to cetegory title\n    if (category) {\n      setTitle(category === null || category === void 0 ? void 0 : category.title);\n    }\n\n    // if modal is closed then set title to empty\n    if (modalOpen === false) {\n      setTitle(\"\");\n    }\n  }, [dispatch, isError, isSuccess, upSuccess, upError, category, modalOpen]);\n  return /*#__PURE__*/_jsxDEV(MainModal, {\n    modalOpen: modalOpen,\n    setModalOpen: setModalOpen,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inline-block sm:w-4/5 border border-border md:w-3/5 lg:w-2/5 w-full align-middle p-10 overflow-y-auto h-full bg-main text-white rounded-2xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold\",\n        children: category ? \"Update\" : \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"flex flex-col gap-6 text-left mt-6\",\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          label: \"Category Name\",\n          placeholder: \"Actions\",\n          type: \"text\",\n          bg: false,\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: isLoading || upLoading,\n          type: \"submit\",\n          className: \"w-full flex-rows gap-4 py-3 text-lg transitions hover:bg-dry border-2 border-subMain rounded bg-subMain text-white\",\n          children: isLoading || upLoading ? \"Loading....\" : category ? \"Update\" : \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(CategoryModal, \"bA+Tr6n2yOIBXhPo6Q4/jn1wCB4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = CategoryModal;\nexport default CategoryModal;\nvar _c;\n$RefreshReg$(_c, \"CategoryModal\");","map":{"version":3,"names":["React","useEffect","useState","MainModal","Input","useDispatch","useSelector","createCategoryAction","updateCategoryAction","toast","jsxDEV","_jsxDEV","CategoryModal","_ref","_s","modalOpen","setModalOpen","category","title","setTitle","dispatch","isLoading","isError","isSuccess","state","categoryCreate","upLoading","upError","upSuccess","categoryUpdate","submitHandler","e","preventDefault","_id","error","type","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","placeholder","bg","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/practice/client/src/Components/Modals/CategoryModal.js"],"sourcesContent":["// import React from \"react\";\n// import MainModal from \"./MainModal\";\n// import { Input } from \"../UsedInputs\";\n\n// function CategoryModal({ modalOpen, setModalOpen, category }) {\n//   return (\n//     <MainModal modalOpen={modalOpen} setModalOpen={setModalOpen}>\n//       <div className=\"inline-block sm:w-4/5 border border-border md:w-3/5 lg:w-2/5 w-full align-middle p-10 overflow-y-auto h-full bg-main text-white rounded-2xl\">\n//         <h2 className=\"text-3xl font-bold\">{category ? \"Update\" : \"Create\"}</h2>\n//         <form className=\"flex flex-col gap-6 text-left mt-6\">\n//           <Input\n//             label=\"Category Name\"\n//             placeholder={category ? category.title : \"Actions\"}\n//             type=\"text\"\n//             bg={false}\n//           />\n//           <button\n//             onClick={() => setModalOpen(false)}\n//             className=\"w-full flex-rows gap-4 py-3 text-lg transitions hover:bg-dry border-2 border-subMain rounded bg-subMain text-white\"\n//           >\n//             {category ? \"Update\" : \"Add\"}\n//           </button>\n//         </form>\n//       </div>\n//     </MainModal>\n//   );\n// }\n\n// export default CategoryModal;\n\n\nimport React, { useEffect, useState } from \"react\";\nimport MainModal from \"./MainModal\";\nimport { Input } from \"../UsedInputs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createCategoryAction,\n  updateCategoryAction,\n} from \"../../Redux/Actions/CategoriesActions\";\nimport toast from \"react-hot-toast\";\n\nfunction CategoryModal({ modalOpen, setModalOpen, category }) {\n  const [title, setTitle] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const { isLoading, isError, isSuccess } = useSelector(\n    (state) => state.categoryCreate\n  );\n  const {\n    isLoading: upLoading,\n    isError: upError,\n    isSuccess: upSuccess,\n  } = useSelector((state) => state.categoryUpdate);\n\n  //  category handler\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (title) {\n      // if category is not empty then update category else create category\n      if (category) {\n        dispatch(updateCategoryAction(category?._id, { title: title }));\n        setModalOpen(!modalOpen);\n      } else {\n        dispatch(createCategoryAction({ title: title }));\n        setTitle(\"\");\n        setModalOpen(!modalOpen);\n      }\n    } else {\n      toast.error(\"Please write a category name\");\n    }\n  };\n\n  // useEffect\n  useEffect(() => {\n    // error\n    if (upError || isError) {\n      toast.error(upError || isError);\n      dispatch({\n        type: isError ? \"CREATE_CATEGORY_RESET\" : \"UPDATE_CATEGORY_RESET\",\n      });\n    }\n\n    // success\n    if (isSuccess || upSuccess) {\n      dispatch({\n        type: isError ? \"CREATE_CATEGORY_RESET\" : \"UPDATE_CATEGORY_RESET\",\n      });\n    }\n\n    // if category is not null then set title to cetegory title\n    if (category) {\n      setTitle(category?.title);\n    }\n\n    // if modal is closed then set title to empty\n    if (modalOpen === false) {\n      setTitle(\"\");\n    }\n  }, [dispatch, isError, isSuccess, upSuccess, upError, category, modalOpen]);\n\n  return (\n    <MainModal modalOpen={modalOpen} setModalOpen={setModalOpen}>\n      <div className=\"inline-block sm:w-4/5 border border-border md:w-3/5 lg:w-2/5 w-full align-middle p-10 overflow-y-auto h-full bg-main text-white rounded-2xl\">\n        <h2 className=\"text-3xl font-bold\">{category ? \"Update\" : \"Create\"}</h2>\n        <form\n          className=\"flex flex-col gap-6 text-left mt-6\"\n          onSubmit={submitHandler}\n        >\n          <Input\n            label=\"Category Name\"\n            placeholder={\"Actions\"}\n            type=\"text\"\n            bg={false}\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          <button\n            disabled={isLoading || upLoading}\n            type=\"submit\"\n            className=\"w-full flex-rows gap-4 py-3 text-lg transitions hover:bg-dry border-2 border-subMain rounded bg-subMain text-white\"\n          >\n            {isLoading || upLoading\n              ? \"Loading....\"\n              : category\n              ? \"Update\"\n              : \"Create\"}\n          </button>\n        </form>\n      </div>\n    </MainModal>\n  );\n}\n\nexport default CategoryModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}