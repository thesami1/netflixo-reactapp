{"ast":null,"code":"import Axios from \"./Axios\";\n\n// ************ PUBLIC APIs ************\n\n// register new user API call\nconst registerService = async user => {\n  const {\n    data\n  } = await Axios.post(\"/users\", user);\n  if (data) {\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  }\n  return data;\n};\n\n// logout user Function\nconst logoutService = () => {\n  localStorage.removeItem(\"userInfo\");\n  return null;\n};\n\n// login user API call\nconst loginService = async user => {\n  const {\n    data\n  } = await Axios.post(\"/users/login\", user);\n  if (data) {\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  }\n  return data;\n};\n\n// ************ PRIVATE APIs ************\n\n// update profile API call\nconst updateProfileService = async (user, token) => {\n  const {\n    data\n  } = await Axios.put(\"/users\", user, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (data) {\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  }\n  return data;\n};\n\n// delete profile API call\nconst deleteProfileService = async token => {\n  const {\n    data\n  } = await Axios.delete(\"/users\", {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (data) {\n    localStorage.removeItem(\"userInfo\");\n  }\n  return data;\n};\n\n// change password API call\nconst changePasswordService = async (passwords, token) => {\n  const {\n    data\n  } = await Axios.put(\"/users/password\", passwords, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return data;\n};\n\n// get all favorite movies\nconst getFavoriteMovies = async token => {\n  const {\n    data\n  } = await Axios.get(\"/users/favorites\", {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return data;\n};\n\n// delete all favorite movies\nconst deleteFavoriteMovies = async token => {\n  const {\n    data\n  } = await Axios.delete(\"/users/favorites\", {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return data;\n};\n\n// like movie API call\nconst likeMovieService = async (movieId, token) => {\n  const {\n    data\n  } = await Axios.post(`/users/favorites`, movieId, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return data;\n};\n\n// ************ ADMIN APIs ************\n\n// admin get all users\nconst getAllUsersService = async token => {\n  const {\n    data\n  } = await Axios.get(\"/users\", {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return data;\n};\n\n// admin delete user\nconst deleteUserService = async (id, token) => {\n  const {\n    data\n  } = await Axios.delete(`/users/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return data;\n};\nexport { registerService, logoutService, loginService, updateProfileService, deleteProfileService, changePasswordService, getFavoriteMovies, deleteFavoriteMovies, getAllUsersService, deleteUserService, likeMovieService };","map":{"version":3,"names":["Axios","registerService","user","data","post","localStorage","setItem","JSON","stringify","logoutService","removeItem","loginService","updateProfileService","token","put","headers","Authorization","deleteProfileService","delete","changePasswordService","passwords","getFavoriteMovies","get","deleteFavoriteMovies","likeMovieService","movieId","getAllUsersService","deleteUserService","id"],"sources":["C:/Users/hp/Downloads/practice/client/src/Redux/APIs/userServices.js"],"sourcesContent":["import Axios from \"./Axios\";\r\n\r\n// ************ PUBLIC APIs ************\r\n\r\n// register new user API call\r\nconst registerService = async (user) => {\r\n  const { data } = await Axios.post(\"/users\", user);\r\n  if (data) {\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  }\r\n  return data;\r\n};\r\n\r\n// logout user Function\r\nconst logoutService = () => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  return null;\r\n};\r\n\r\n// login user API call\r\nconst loginService = async (user) => {\r\n  const { data } = await Axios.post(\"/users/login\", user);\r\n  if (data) {\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  }\r\n  return data;\r\n};\r\n\r\n// ************ PRIVATE APIs ************\r\n\r\n// update profile API call\r\nconst updateProfileService = async (user, token) => {\r\n  const { data } = await Axios.put(\"/users\", user, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n  if (data) {\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  }\r\n  return data;\r\n};\r\n\r\n// delete profile API call\r\nconst deleteProfileService = async (token) => {\r\n  const { data } = await Axios.delete(\"/users\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n  if (data) {\r\n    localStorage.removeItem(\"userInfo\");\r\n  }\r\n  return data;\r\n};\r\n\r\n// change password API call\r\nconst changePasswordService = async (passwords, token) => {\r\n  const { data } = await Axios.put(\"/users/password\", passwords, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\n// get all favorite movies\r\nconst getFavoriteMovies = async (token) => {\r\n  const { data } = await Axios.get(\"/users/favorites\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\n// delete all favorite movies\r\nconst deleteFavoriteMovies = async (token) => {\r\n  const { data } = await Axios.delete(\"/users/favorites\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\n// like movie API call\r\nconst likeMovieService = async (movieId, token) => {\r\n  const { data } = await Axios.post(`/users/favorites`, movieId, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\n// ************ ADMIN APIs ************\r\n\r\n// admin get all users\r\nconst getAllUsersService = async (token) => {\r\n  const { data } = await Axios.get(\"/users\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\n// admin delete user\r\nconst deleteUserService = async (id, token) => {\r\n  const { data } = await Axios.delete(`/users/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport {\r\n  registerService,\r\n  logoutService,\r\n  loginService,\r\n  updateProfileService,\r\n  deleteProfileService,\r\n  changePasswordService,\r\n  getFavoriteMovies,\r\n  deleteFavoriteMovies,\r\n  getAllUsersService,\r\n  deleteUserService,\r\n  likeMovieService,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}