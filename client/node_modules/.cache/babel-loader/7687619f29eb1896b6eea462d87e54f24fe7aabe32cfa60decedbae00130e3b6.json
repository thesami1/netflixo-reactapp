{"ast":null,"code":"import * as userConstants from \"../Constants/userConstants\";\n// import * as movieConstants from \"../Constants/MoviesConstants\";\n// import * as categoriesConstants from \"../Constants/CategoriesConstants\";\nimport * as userApi from \"../APIs/userServices\";\nimport toast from \"react-hot-toast\";\nimport { ErrorsAction, tokenProtection } from \"../Protection\";\n\n// login action\nconst loginAction = datas => async dispatch => {\n  try {\n    dispatch({\n      type: userConstants.USER_LOGIN_REQUEST\n    });\n    const response = await userApi.loginService(datas);\n    dispatch({\n      type: userConstants.USER_LOGIN_SUCCESS,\n      payload: response\n    });\n  } catch (error) {\n    ErrorsAction(error, dispatch, userConstants.USER_LOGIN_FAIL);\n  }\n};\n\n// register action\nconst registerAction = datas => async dispatch => {\n  try {\n    dispatch({\n      type: userConstants.USER_REGISTER_REQUEST\n    });\n    const response = await userApi.registerService(datas);\n    dispatch({\n      type: userConstants.USER_REGISTER_SUCCESS,\n      payload: response\n    });\n    dispatch({\n      type: userConstants.USER_LOGIN_SUCCESS,\n      payload: response\n    });\n  } catch (error) {\n    ErrorsAction(error, dispatch, userConstants.USER_REGISTER_FAIL);\n  }\n};\n\n// logout action\nconst logoutAction = () => dispatch => {\n  userApi.logoutService();\n  dispatch({\n    type: userConstants.USER_LOGOUT\n  });\n  dispatch({\n    type: userConstants.USER_LOGIN_RESET\n  });\n  dispatch({\n    type: userConstants.USER_REGISTER_RESET\n  });\n  // dispatch({ type: userConstants.DELETE_FAVORITE_MOVIES_RESET });\n  // dispatch({ type: userConstants.USER_UPDATE_PROFILE_RESET });\n  // dispatch({ type: userConstants.USER_DELETE_PROFILE_RESET });\n  // dispatch({ type: userConstants.USER_CHANGE_PASSWORD_RESET });\n  // dispatch({ type: userConstants.GET_FAVORITE_MOVIES_RESET });\n  // dispatch({ type: userConstants.GET_ALL_USERS_RESET });\n  // dispatch({ type: userConstants.DELETE_USER_RESET });\n  // dispatch({ type: userConstants.LIKE_MOVIE_RESET });\n  // dispatch({ type: movieConstants.MOVIE_DETAILS_RESET });\n  // dispatch({ type: movieConstants.CREATE_REVIEW_RESET });\n  // dispatch({ type: movieConstants.CREATE_MOVIE_RESET });\n  // dispatch({ type: movieConstants.RESET_CAST });\n  // dispatch({ type: movieConstants.UPDATE_MOVIE_RESET });\n  // dispatch({ type: categoriesConstants.CREATE_CATEGORY_RESET });\n  // dispatch({ type: categoriesConstants.UPDATE_CATEGORY_RESET });\n  // dispatch({ type: categoriesConstants.DELETE_CATEGORY_RESET });\n};\n\nexport { loginAction, registerAction, logoutAction };","map":{"version":3,"names":["userConstants","userApi","toast","ErrorsAction","tokenProtection","loginAction","datas","dispatch","type","USER_LOGIN_REQUEST","response","loginService","USER_LOGIN_SUCCESS","payload","error","USER_LOGIN_FAIL","registerAction","USER_REGISTER_REQUEST","registerService","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","logoutAction","logoutService","USER_LOGOUT","USER_LOGIN_RESET","USER_REGISTER_RESET"],"sources":["C:/Users/hp/Downloads/practice/client/src/Redux/Actions/userActions.js"],"sourcesContent":["import * as userConstants from \"../Constants/userConstants\";\r\n// import * as movieConstants from \"../Constants/MoviesConstants\";\r\n// import * as categoriesConstants from \"../Constants/CategoriesConstants\";\r\nimport * as userApi from \"../APIs/userServices\";\r\nimport toast from \"react-hot-toast\";\r\nimport { ErrorsAction, tokenProtection } from \"../Protection\";\r\n\r\n// login action\r\nconst loginAction = (datas) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: userConstants.USER_LOGIN_REQUEST });\r\n    const response = await userApi.loginService(datas);\r\n    dispatch({ type: userConstants.USER_LOGIN_SUCCESS, payload: response });\r\n  } catch (error) {\r\n    ErrorsAction(error, dispatch, userConstants.USER_LOGIN_FAIL);\r\n  }\r\n};\r\n\r\n// register action\r\nconst registerAction = (datas) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: userConstants.USER_REGISTER_REQUEST });\r\n    const response = await userApi.registerService(datas);\r\n    dispatch({ type: userConstants.USER_REGISTER_SUCCESS, payload: response });\r\n    dispatch({ type: userConstants.USER_LOGIN_SUCCESS, payload: response });\r\n  } catch (error) {\r\n    ErrorsAction(error, dispatch, userConstants.USER_REGISTER_FAIL);\r\n  }\r\n};\r\n\r\n// logout action\r\nconst logoutAction = () => (dispatch) => {\r\n  userApi.logoutService();\r\n  dispatch({ type: userConstants.USER_LOGOUT });\r\n  dispatch({ type: userConstants.USER_LOGIN_RESET });\r\n  dispatch({ type: userConstants.USER_REGISTER_RESET });\r\n  // dispatch({ type: userConstants.DELETE_FAVORITE_MOVIES_RESET });\r\n  // dispatch({ type: userConstants.USER_UPDATE_PROFILE_RESET });\r\n  // dispatch({ type: userConstants.USER_DELETE_PROFILE_RESET });\r\n  // dispatch({ type: userConstants.USER_CHANGE_PASSWORD_RESET });\r\n  // dispatch({ type: userConstants.GET_FAVORITE_MOVIES_RESET });\r\n  // dispatch({ type: userConstants.GET_ALL_USERS_RESET });\r\n  // dispatch({ type: userConstants.DELETE_USER_RESET });\r\n  // dispatch({ type: userConstants.LIKE_MOVIE_RESET });\r\n  // dispatch({ type: movieConstants.MOVIE_DETAILS_RESET });\r\n  // dispatch({ type: movieConstants.CREATE_REVIEW_RESET });\r\n  // dispatch({ type: movieConstants.CREATE_MOVIE_RESET });\r\n  // dispatch({ type: movieConstants.RESET_CAST });\r\n  // dispatch({ type: movieConstants.UPDATE_MOVIE_RESET });\r\n  // dispatch({ type: categoriesConstants.CREATE_CATEGORY_RESET });\r\n  // dispatch({ type: categoriesConstants.UPDATE_CATEGORY_RESET });\r\n  // dispatch({ type: categoriesConstants.DELETE_CATEGORY_RESET });\r\n};\r\n\r\n\r\n\r\nexport {\r\n  loginAction,\r\n  registerAction,\r\n  logoutAction,\r\n\r\n};\r\n"],"mappings":"AAAA,OAAO,KAAKA,aAAa,MAAM,4BAA4B;AAC3D;AACA;AACA,OAAO,KAAKC,OAAO,MAAM,sBAAsB;AAC/C,OAAOC,KAAK,MAAM,iBAAiB;AACnC,SAASC,YAAY,EAAEC,eAAe,QAAQ,eAAe;;AAE7D;AACA,MAAMC,WAAW,GAAIC,KAAK,IAAK,MAAOC,QAAQ,IAAK;EACjD,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAER,aAAa,CAACS;IAAmB,CAAC,CAAC;IACpD,MAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACU,YAAY,CAACL,KAAK,CAAC;IAClDC,QAAQ,CAAC;MAAEC,IAAI,EAAER,aAAa,CAACY,kBAAkB;MAAEC,OAAO,EAAEH;IAAS,CAAC,CAAC;EACzE,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdX,YAAY,CAACW,KAAK,EAAEP,QAAQ,EAAEP,aAAa,CAACe,eAAe,CAAC;EAC9D;AACF,CAAC;;AAED;AACA,MAAMC,cAAc,GAAIV,KAAK,IAAK,MAAOC,QAAQ,IAAK;EACpD,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAER,aAAa,CAACiB;IAAsB,CAAC,CAAC;IACvD,MAAMP,QAAQ,GAAG,MAAMT,OAAO,CAACiB,eAAe,CAACZ,KAAK,CAAC;IACrDC,QAAQ,CAAC;MAAEC,IAAI,EAAER,aAAa,CAACmB,qBAAqB;MAAEN,OAAO,EAAEH;IAAS,CAAC,CAAC;IAC1EH,QAAQ,CAAC;MAAEC,IAAI,EAAER,aAAa,CAACY,kBAAkB;MAAEC,OAAO,EAAEH;IAAS,CAAC,CAAC;EACzE,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdX,YAAY,CAACW,KAAK,EAAEP,QAAQ,EAAEP,aAAa,CAACoB,kBAAkB,CAAC;EACjE;AACF,CAAC;;AAED;AACA,MAAMC,YAAY,GAAGA,CAAA,KAAOd,QAAQ,IAAK;EACvCN,OAAO,CAACqB,aAAa,EAAE;EACvBf,QAAQ,CAAC;IAAEC,IAAI,EAAER,aAAa,CAACuB;EAAY,CAAC,CAAC;EAC7ChB,QAAQ,CAAC;IAAEC,IAAI,EAAER,aAAa,CAACwB;EAAiB,CAAC,CAAC;EAClDjB,QAAQ,CAAC;IAAEC,IAAI,EAAER,aAAa,CAACyB;EAAoB,CAAC,CAAC;EACrD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;;AAID,SACEpB,WAAW,EACXW,cAAc,EACdK,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}