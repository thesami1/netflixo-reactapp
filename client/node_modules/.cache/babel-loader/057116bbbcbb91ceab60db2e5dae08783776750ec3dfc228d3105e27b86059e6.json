{"ast":null,"code":"import * as yup from \"yup\";\n\n// login validation\nconst LoginValidation = yup.object().shape({\n  email: yup.string().email().required(\"Email is required\").trim(),\n  password: yup.string().required(\"Password is required\").min(6, \"Password must be at least 6 characters\").max(20, \"Password must be less than 20 characters\").matches(/(?=.*[0-9])/, \"Password must contain a number\")\n});\n\n// register validation\nconst RegisterValidation = yup.object().shape({\n  email: yup.string().email().required(\"Email is required\").trim(),\n  password: yup.string().required(\"Password is required\").min(6, \"Password must be at least 6 characters\").max(20, \"Password must be less than 20 characters\").matches(/(?=.*[0-9])/, \"Password must contain a number\"),\n  fullName: yup.string().required(\"Full name is required\").max(20, \"Full name must be less than 20 characters\").matches(/^[a-zA-Z ]*$/, \"Full name must contain only letters\")\n});\nconst ProfileValidation = yup.object().shape({\n  fullName: yup.string().required(\"Full name is required\").max(20, \"Full name must be less than 20 characters\").matches(/^[a-zA-Z ]*$/, \"Full name must contain only letters\"),\n  email: yup.string().email().required(\"Email is required\").trim()\n});\nconst PasswordValidation = yup.object().shape({\n  oldPassword: yup.string().required(\"Password is required\").min(6, \"Password must be at least 6 characters\").max(20, \"Password must be less than 20 characters\").matches(/(?=.*[0-9])/, \"Password must contain a number\"),\n  newPassword: yup.string().required(\"Password is required\").min(6, \"Password must be at least 6 characters\").max(20, \"Password must be less than 20 characters\").matches(/(?=.*[0-9])/, \"Password must contain a number\"),\n  confirmPassword: yup.string().required(\"Password is required\").min(6, \"Password must be at least 6 characters\").max(20, \"Password must be less than 20 characters\").matches(/(?=.*[0-9])/, \"Password must contain a number\").oneOf([yup.ref(\"newPassword\"), null], \"Passwords must match\")\n});\nexport { LoginValidation, RegisterValidation, ProfileValidation, PasswordValidation };","map":{"version":3,"names":["yup","LoginValidation","object","shape","email","string","required","trim","password","min","max","matches","RegisterValidation","fullName","ProfileValidation","PasswordValidation","oldPassword","newPassword","confirmPassword","oneOf","ref"],"sources":["C:/Users/hp/Downloads/practice/client/src/Components/Validation/UserValidation.js"],"sourcesContent":["import * as yup from \"yup\";\r\n\r\n// login validation\r\nconst LoginValidation = yup.object().shape({\r\n  email: yup.string().email().required(\"Email is required\").trim(),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is required\")\r\n    .min(6, \"Password must be at least 6 characters\")\r\n    .max(20, \"Password must be less than 20 characters\")\r\n    .matches(/(?=.*[0-9])/, \"Password must contain a number\"),\r\n});\r\n\r\n// register validation\r\nconst RegisterValidation = yup.object().shape({\r\n  email: yup.string().email().required(\"Email is required\").trim(),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is required\")\r\n    .min(6, \"Password must be at least 6 characters\")\r\n    .max(20, \"Password must be less than 20 characters\")\r\n    .matches(/(?=.*[0-9])/, \"Password must contain a number\"),\r\n  fullName: yup\r\n    .string()\r\n    .required(\"Full name is required\")\r\n    .max(20, \"Full name must be less than 20 characters\")\r\n    .matches(/^[a-zA-Z ]*$/, \"Full name must contain only letters\"),\r\n});\r\n\r\nconst ProfileValidation = yup.object().shape({\r\n  fullName: yup\r\n    .string()\r\n    .required(\"Full name is required\")\r\n    .max(20, \"Full name must be less than 20 characters\")\r\n    .matches(/^[a-zA-Z ]*$/, \"Full name must contain only letters\"),\r\n  email: yup.string().email().required(\"Email is required\").trim(),\r\n});\r\n\r\nconst PasswordValidation = yup.object().shape({\r\n  oldPassword: yup\r\n    .string()\r\n    .required(\"Password is required\")\r\n    .min(6, \"Password must be at least 6 characters\")\r\n    .max(20, \"Password must be less than 20 characters\")\r\n    .matches(/(?=.*[0-9])/, \"Password must contain a number\"),\r\n  newPassword: yup\r\n    .string()\r\n    .required(\"Password is required\")\r\n    .min(6, \"Password must be at least 6 characters\")\r\n    .max(20, \"Password must be less than 20 characters\")\r\n    .matches(/(?=.*[0-9])/, \"Password must contain a number\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(\"Password is required\")\r\n    .min(6, \"Password must be at least 6 characters\")\r\n    .max(20, \"Password must be less than 20 characters\")\r\n    .matches(/(?=.*[0-9])/, \"Password must contain a number\")\r\n    .oneOf([yup.ref(\"newPassword\"), null], \"Passwords must match\"),\r\n});\r\n\r\nexport {\r\n  LoginValidation,\r\n  RegisterValidation,\r\n  ProfileValidation,\r\n  PasswordValidation,\r\n};\r\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;;AAE1B;AACA,MAAMC,eAAe,GAAGD,GAAG,CAACE,MAAM,EAAE,CAACC,KAAK,CAAC;EACzCC,KAAK,EAAEJ,GAAG,CAACK,MAAM,EAAE,CAACD,KAAK,EAAE,CAACE,QAAQ,CAAC,mBAAmB,CAAC,CAACC,IAAI,EAAE;EAChEC,QAAQ,EAAER,GAAG,CACVK,MAAM,EAAE,CACRC,QAAQ,CAAC,sBAAsB,CAAC,CAChCG,GAAG,CAAC,CAAC,EAAE,wCAAwC,CAAC,CAChDC,GAAG,CAAC,EAAE,EAAE,0CAA0C,CAAC,CACnDC,OAAO,CAAC,aAAa,EAAE,gCAAgC;AAC5D,CAAC,CAAC;;AAEF;AACA,MAAMC,kBAAkB,GAAGZ,GAAG,CAACE,MAAM,EAAE,CAACC,KAAK,CAAC;EAC5CC,KAAK,EAAEJ,GAAG,CAACK,MAAM,EAAE,CAACD,KAAK,EAAE,CAACE,QAAQ,CAAC,mBAAmB,CAAC,CAACC,IAAI,EAAE;EAChEC,QAAQ,EAAER,GAAG,CACVK,MAAM,EAAE,CACRC,QAAQ,CAAC,sBAAsB,CAAC,CAChCG,GAAG,CAAC,CAAC,EAAE,wCAAwC,CAAC,CAChDC,GAAG,CAAC,EAAE,EAAE,0CAA0C,CAAC,CACnDC,OAAO,CAAC,aAAa,EAAE,gCAAgC,CAAC;EAC3DE,QAAQ,EAAEb,GAAG,CACVK,MAAM,EAAE,CACRC,QAAQ,CAAC,uBAAuB,CAAC,CACjCI,GAAG,CAAC,EAAE,EAAE,2CAA2C,CAAC,CACpDC,OAAO,CAAC,cAAc,EAAE,qCAAqC;AAClE,CAAC,CAAC;AAEF,MAAMG,iBAAiB,GAAGd,GAAG,CAACE,MAAM,EAAE,CAACC,KAAK,CAAC;EAC3CU,QAAQ,EAAEb,GAAG,CACVK,MAAM,EAAE,CACRC,QAAQ,CAAC,uBAAuB,CAAC,CACjCI,GAAG,CAAC,EAAE,EAAE,2CAA2C,CAAC,CACpDC,OAAO,CAAC,cAAc,EAAE,qCAAqC,CAAC;EACjEP,KAAK,EAAEJ,GAAG,CAACK,MAAM,EAAE,CAACD,KAAK,EAAE,CAACE,QAAQ,CAAC,mBAAmB,CAAC,CAACC,IAAI;AAChE,CAAC,CAAC;AAEF,MAAMQ,kBAAkB,GAAGf,GAAG,CAACE,MAAM,EAAE,CAACC,KAAK,CAAC;EAC5Ca,WAAW,EAAEhB,GAAG,CACbK,MAAM,EAAE,CACRC,QAAQ,CAAC,sBAAsB,CAAC,CAChCG,GAAG,CAAC,CAAC,EAAE,wCAAwC,CAAC,CAChDC,GAAG,CAAC,EAAE,EAAE,0CAA0C,CAAC,CACnDC,OAAO,CAAC,aAAa,EAAE,gCAAgC,CAAC;EAC3DM,WAAW,EAAEjB,GAAG,CACbK,MAAM,EAAE,CACRC,QAAQ,CAAC,sBAAsB,CAAC,CAChCG,GAAG,CAAC,CAAC,EAAE,wCAAwC,CAAC,CAChDC,GAAG,CAAC,EAAE,EAAE,0CAA0C,CAAC,CACnDC,OAAO,CAAC,aAAa,EAAE,gCAAgC,CAAC;EAC3DO,eAAe,EAAElB,GAAG,CACjBK,MAAM,EAAE,CACRC,QAAQ,CAAC,sBAAsB,CAAC,CAChCG,GAAG,CAAC,CAAC,EAAE,wCAAwC,CAAC,CAChDC,GAAG,CAAC,EAAE,EAAE,0CAA0C,CAAC,CACnDC,OAAO,CAAC,aAAa,EAAE,gCAAgC,CAAC,CACxDQ,KAAK,CAAC,CAACnB,GAAG,CAACoB,GAAG,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,EAAE,sBAAsB;AACjE,CAAC,CAAC;AAEF,SACEnB,eAAe,EACfW,kBAAkB,EAClBE,iBAAiB,EACjBC,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}